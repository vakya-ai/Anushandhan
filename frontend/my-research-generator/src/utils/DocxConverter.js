// src/utils/DocxConverter.js
import { saveAs } from 'file-saver';
import { Document, Packer, Paragraph, TextRun, HeadingLevel, AlignmentType } from 'docx';

class DocxConverter {
  /**
   * Convert HTML content to DOCX format
   * @param {string} htmlContent - HTML content to convert
   * @param {string} title - Document title
   * @returns {Promise<boolean>} - Success status
   */
  static async convertHtmlToDocx(htmlContent, title = 'Research Paper') {
    try {
      // Parse the HTML content
      const parser = new DOMParser();
      const htmlDoc = parser.parseFromString(htmlContent, 'text/html');
      
      // Create a new document
      const doc = new Document({
        title: title,
        description: 'Generated by ResearchAI',
        styles: {
          paragraphStyles: [
            {
              id: 'Normal',
              name: 'Normal',
              basedOn: 'Normal',
              next: 'Normal',
              quickFormat: true,
              run: {
                size: 24, // 12pt
                font: 'Times New Roman',
              },
              paragraph: {
                spacing: {
                  line: 360, // 1.5x line spacing
                  before: 0,
                  after: 240, // 12pt after paragraph
                },
              },
            },
            {
              id: 'Heading1',
              name: 'Heading 1',
              basedOn: 'Normal',
              next: 'Normal',
              quickFormat: true,
              run: {
                size: 32, // 16pt
                bold: true,
                font: 'Times New Roman',
              },
              paragraph: {
                spacing: {
                  before: 480, // 24pt before
                  after: 240, // 12pt after
                },
              },
            },
            {
              id: 'Heading2',
              name: 'Heading 2',
              basedOn: 'Normal',
              next: 'Normal',
              quickFormat: true,
              run: {
                size: 28, // 14pt
                bold: true,
                font: 'Times New Roman',
              },
              paragraph: {
                spacing: {
                  before: 360, // 18pt before
                  after: 240, // 12pt after
                },
              },
            },
          ],
        },
      });
      
      // Add title
      const sections = [];
      
      // Title
      sections.push(
        new Paragraph({
          text: title,
          heading: HeadingLevel.HEADING_1,
          alignment: AlignmentType.CENTER,
        })
      );

      // Process all other elements
      const elements = htmlDoc.body.querySelectorAll('h1, h2, h3, h4, h5, h6, p, blockquote, ul, ol');
      
      elements.forEach(element => {
        // Process based on element type
        if (element.tagName.startsWith('H')) {
          // Headings
          const level = parseInt(element.tagName.substring(1));
          sections.push(
            new Paragraph({
              text: element.textContent,
              heading: level === 1 ? HeadingLevel.HEADING_1 : HeadingLevel.HEADING_2,
            })
          );
        } else if (element.tagName === 'P') {
          // Paragraphs
          sections.push(
            new Paragraph({
              children: [
                new TextRun({
                  text: element.textContent,
                }),
              ],
            })
          );
        } else if (element.tagName === 'BLOCKQUOTE') {
          // Blockquotes
          sections.push(
            new Paragraph({
              children: [
                new TextRun({
                  text: element.textContent,
                  italics: true,
                }),
              ],
              indent: {
                left: 720, // 0.5 inch indent
              },
            })
          );
        } else if (element.tagName === 'UL' || element.tagName === 'OL') {
          // Lists
          const items = element.querySelectorAll('li');
          items.forEach((item, index) => {
            sections.push(
              new Paragraph({
                children: [
                  new TextRun({
                    text: `${element.tagName === 'OL' ? (index + 1) + '. ' : 'â€¢ '}${item.textContent}`,
                  }),
                ],
                indent: {
                  left: 720, // 0.5 inch indent
                },
              })
            );
          });
        }
      });
      
      // Add all sections to the document
      doc.addSection({
        children: sections,
      });
      
      // Generate the document
      const buffer = await Packer.toBuffer(doc);
      
      // Save the document
      saveAs(new Blob([buffer]), `${title.replace(/[^a-zA-Z0-9]/g, '_')}_${Date.now()}.docx`);
      
      return true;
    } catch (error) {
      console.error('Error converting to DOCX:', error);
      return false;
    }
  }
  
  /**
   * Simplified conversion for browsers without docx library
   * @param {string} htmlContent - HTML content
   * @param {string} title - Document title
   */
  static createSimpleDocx(htmlContent, title = 'Research Paper') {
    try {
      // Create a full HTML document
      const fullHtml = `
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <title>${title}</title>
            <style>
                body { font-family: 'Times New Roman', Times, serif; line-height: 1.6; margin: 1in; }
                h1 { font-size: 16pt; font-weight: bold; margin-top: 12pt; text-align: center; }
                h2 { font-size: 14pt; font-weight: bold; margin-top: 10pt; }
                h3 { font-size: 12pt; font-weight: bold; margin-top: 8pt; }
                p { font-size: 12pt; margin: 6pt 0; }
                blockquote { margin-left: 24pt; font-style: italic; }
                code { font-family: 'Courier New', monospace; }
                .ieee-paper { max-width: 8.5in; }
            </style>
        </head>
        <body>
            <div class="ieee-paper">
                ${htmlContent}
            </div>
        </body>
        </html>
      `;
      
      // Create a blob
      const blob = new Blob([fullHtml], { type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' });
      
      // Save the file
      saveAs(blob, `${title.replace(/[^a-zA-Z0-9]/g, '_')}_${Date.now()}.docx`);
      
      return true;
    } catch (error) {
      console.error('Error creating simple DOCX:', error);
      return false;
    }
  }
}

export default DocxConverter;